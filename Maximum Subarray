Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.

class Solution {
    public int maxSubArray(int[] nums) {
        int max_ending_here = Integer.MIN.VALUE,
        max_so_far=0, start = 0, end =0, s=0;
        
        for(int i = 0; i< nums.length; i++)
        {
            max_ending_here += nums[i];
            if(max_so_far < max_ending_here)
            {
                max_so_far = max_ending_here
                start = s;
                end = i;
            }
            
            if(max_ending_here < 0)
            {
                max_ending_here = 0;
                s = i + 1;
            }            
        }
         System.out.println("Maximum contiguous sum is "
                           + max_so_far);
        System.out.println("Starting index " + start);
        System.out.println("Ending index " + end);
    return max_so_far;
    }
}
